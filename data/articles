K-means + graph? https://towardsdatascience.com/how-to-cluster-in-high-dimensions-4ef693bacc6

Measuring trajectory similarity

The segment-segment distance introduces the trajectory shape factor into the similarity measurement to improve the accuracy.
The three kinds of distance are integrated with the traditional dynamic time warping algorithm (DTW) algorithm to
propose a new segment–based dynamic time warping algorithm (SDTW). The experimental results show that the SDTW algorithm
can exhibit about 57%, 86%, and 31% better accuracy than the longest common subsequence algorithm (LCSS), and edit
distance on real sequence algorithm (EDR), and DTW, respectively, and that the sensitivity to the noise data is
lower than that those algorithms.

A number of algorithms have been developed for measuring similarity of trajectories (i.e., paths with timing information).
These have proven useful for machine vision applications that track objects, people, or animals, and for storing and
indexing these in databases to enable later retrieval by similarity.

For example, Yanagisawa et al. (2003) developed a shape-based similarity and indexing scheme for trajectories, and
similarly Chen et al. (2005) compared a number of methods for measuring distance between trajectories, and introduced
a measure called Edit Distance on Real Sequence (EDR). These methods rely to some extent on the time-based nature of
the trajectories, which are implicitly ordinal, to help determine how elements from one path map onto elements on
the second path. Trajectories sampled at regular time intervals produce a natural division of a path into equal-duration
path segments, and even with irregular sampling, trajectory times can be interpolated to produce equal-duration segments.
The EDR method relies on timing information and its measure of similarity is a generalization of the edit distance,
which counts the number of operations that are required to make one trajectory match the other in terms of timing
and position. These approaches have also focused on the practical problems related to efficiently storing, indexing,
and retrieving trajectories, which involves other tradeoffs we will not address here.

Graph edit distance

In mathematics and computer science, graph edit distance (GED) is a measure of similarity (or dissimilarity)
between two graphs. The concept of graph edit distance was first formalized mathematically by Alberto Sanfeliu
and King-Sun Fu in 1983.[1] A major application of graph edit distance is in inexact graph matching, such as
error-tolerant pattern recognition in machine learning.[2]

The graph edit distance between two graphs is related to the string edit distance between strings. With the
interpretation of strings as connected, directed acyclic graphs of maximum degree one, classical definitions
of edit distance such as Levenshtein distance, [3] [4] Hamming distance[5] and Jaro–Winkler distance may be
interpreted as graph edit distances between suitably constrained graphs. Likewise, graph edit distance is also
a generalization of tree edit distance between rooted trees.

estimate the quality of the spatio-temporal compression by computing the syncronized euclidean distance (SED)

Time-series Classification
SVM, kNN, RandomForest and MLP

Time series classification is a supportive mechanism for time series forecasting.
Kasun Bandara et al. propose a mechanism for time series forecasting using Long Short-Term Memory(LSTM) networks



